AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: Lambda Authorizer - To Be Destroyed


Parameters:
  ParameterStoreEntryName:
    Type: String
    Default: "YouShallNotPass"

Resources:
  lambdaAuthorizer:
    Type: "AWS::Serverless::Function"
    Properties:
      Handler: auth.lambda_handler
      Runtime: python3.6
      FunctionName: lambda-authorizer
      CodeUri: s3://serverless-meetup-enkel/lambda-authorizer.zip
      Description: ""
      MemorySize: 1024
      Timeout: 10
      Role: !GetAtt Role.Arn
      Environment:
        Variables:
          PARAMETER_NAME: !Ref ParameterStoreEntryName


  Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LambdaAuthorizerRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
        - arn:aws:iam::aws:policy/AmazonSSMFullAccess
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        -
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole


  Parameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Ref ParameterStoreEntryName
      Type: String
      Value: 0

Outputs:
  LambdaAuthorizerARN:
    Description: Lambda Authorizer.
    Value:
      Fn::GetAtt:
        - lambdaAuthorizer
        - Arn
    Export:
      Name:
        Fn::Sub: lambda-authorizer